"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1407],{57522:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>u});var n=r(29901);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},f=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),d=c(r),u=o,m=d["".concat(p,".").concat(u)]||d[u]||s[u]||i;return r?n.createElement(m,l(l({ref:t},f),{},{components:r})):n.createElement(m,l({ref:t},f))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},68652:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=r(14090),o=(r(29901),r(57522));const i={},l=void 0,a={unversionedId:"api/zoom.recordingfile.filetype",id:"api/zoom.recordingfile.filetype",title:"zoom.recordingfile.filetype",description:"Home &gt; @runlightyear/zoom &gt; RecordingFile &gt; fileType",source:"@site/docs/api/zoom.recordingfile.filetype.md",sourceDirName:"api",slug:"/api/zoom.recordingfile.filetype",permalink:"/docs/api/zoom.recordingfile.filetype",draft:!1,tags:[],version:"current",frontMatter:{}},p={},c=[{value:"RecordingFile.fileType property",id:"recordingfilefiletype-property",level:2}],f={toc:c};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/zoom"},"@runlightyear/zoom")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/zoom.recordingfile"},"RecordingFile")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/zoom.recordingfile.filetype"},"fileType")),(0,o.kt)("h2",{id:"recordingfilefiletype-property"},"RecordingFile.fileType property"),(0,o.kt)("p",null,"The recording file type. The value of this field could be one of the following:"),(0,o.kt)("p",null,'MP4: Video file of the recording. M4A Audio-only file of the recording. TIMELINE: Timestamp file of the recording in JSON file format. To get a timeline file, the "Add a timestamp to the recording" setting must be enabled in the recording settings. The time will display in the host\'s timezone, set on their Zoom profile. TRANSCRIPT: Transcription file of the recording in VTT format. CHAT: A TXT file containing in-meeting chat messages that were sent during the meeting. CC: File containing closed captions of the recording in VTT file format. CSV: File containing polling data in csv format.'),(0,o.kt)("p",null,"A recording file object with file type of either CC or TIMELINE does not have the following properties: id, status, file","_","size, recording","_","type, and play","_","url."),(0,o.kt)("p",null,"SUMMARY: Summary file of the recording in JSON file format."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"fileType: FileType;\n")))}s.isMDXComponent=!0}}]);