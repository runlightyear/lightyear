"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[40822],{57522:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(29901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=i(n),g=r,m=d["".concat(p,".").concat(g)]||d[g]||h[g]||s;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var i=2;i<s;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var a=n(14090),r=(n(29901),n(57522));const s={},l=void 0,o={unversionedId:"api/gsheets.googlesheets",id:"api/gsheets.googlesheets",title:"gsheets.googlesheets",description:"Home &gt; @runlightyear/gsheets &gt; GoogleSheets",source:"@site/docs/api/gsheets.googlesheets.md",sourceDirName:"api",slug:"/api/gsheets.googlesheets",permalink:"/docs/api/gsheets.googlesheets",draft:!1,tags:[],version:"current",frontMatter:{}},p={},i=[{value:"GoogleSheets class",id:"googlesheets-class",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 5",id:"example-5",level:2},{value:"Example 6",id:"example-6",level:2},{value:"Example 7",id:"example-7",level:2},{value:"Example 8",id:"example-8",level:2},{value:"Example 9",id:"example-9",level:2},{value:"Example 10",id:"example-10",level:2},{value:"Example 11",id:"example-11",level:2},{value:"Example 12",id:"example-12",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Listener Methods",id:"listener-methods",level:2},{value:"Spreadsheet Methods",id:"spreadsheet-methods",level:2},{value:"Value Methods",id:"value-methods",level:2},{value:"Other Methods",id:"other-methods",level:2}],u={toc:i};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets"},"@runlightyear/gsheets")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets.googlesheets"},"GoogleSheets")),(0,r.kt)("h2",{id:"googlesheets-class"},"GoogleSheets class"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is in beta and may contain contain bugs. Can be used in production with caution.")),(0,r.kt)("p",null,"Google Sheets Connector"),(0,r.kt)("b",null,"Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"declare class GoogleSheets extends RestConnector \n")),(0,r.kt)("p",null,"Extends: "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/lightyear.restconnector"},"RestConnector")),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"Create a spreadsheet"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "createSpreadsheet",\n  title: "Create Spreadsheet",\n  apps: ["gsheets"],\n  variables: ["title"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.createSpreadsheet({\n      title: variables.title!,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"Get a row"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "getRow",\n  title: "Get Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.getValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,"Get a column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "getColumn",\n  title: "Get Column",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.getValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A:A",\n      majorDimension: "COLUMNS",\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-4"},"Example 4"),(0,r.kt)("p",null,"Get all rows and columns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "getAllRowsAndColumns",\n  title: "Get All Rows And Columns",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId", "worksheetName"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.getValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: `${variables.worksheetName!}`,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-5"},"Example 5"),(0,r.kt)("p",null,"Append a row"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "appendRow",\n  title: "Append Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n    const response = await gsheets.appendValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "1:1",\n        values: [[1, 2, 3]],\n      },\n    });\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-6"},"Example 6"),(0,r.kt)("p",null,"Append multiple rows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "appendRow",\n  title: "Append Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n    const response = await gsheets.appendValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "1:1",\n        values: [[1, 2, 3]],\n      },\n    });\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-7"},"Example 7"),(0,r.kt)("p",null,"Update a row"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateRow",\n  title: "Update Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "1:1",\n        majorDimension: "ROWS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-8"},"Example 8"),(0,r.kt)("p",null,"Update a column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateColumn",\n  title: "Update Column",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A:A",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A:A",\n        majorDimension: "COLUMNS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-9"},"Example 9"),(0,r.kt)("p",null,"Update rows and columns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "updateRowsAndColumns",\n  title: "Update Rows and Columns",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A1:C3",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A1:C3",\n        majorDimension: "ROWS",\n        values: [\n          [1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9],\n        ],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-10"},"Example 10"),(0,r.kt)("p",null,"Clear a row"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "clearRow",\n  title: "Clear Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.clearValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-11"},"Example 11"),(0,r.kt)("p",null,"Clear a column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "clearColumn",\n  title: "Clear Column",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.clearValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A:A",\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-12"},"Example 12"),(0,r.kt)("p",null,"On new rows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { GoogleSheets } from "@runlightyear/gsheets";\n\nGoogleSheets.onNewRows({\n  name: "onNewRows",\n  title: "On New Rows",\n  apps: ["gsheets"],\n  pollingFrequency: 1,\n  run: async ({ data }) => {\n    console.log("Data: ", data);\n  },\n});\n')),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Constructor"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets._constructor_"},"(constructor)(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Constructs a new instance of the ",(0,r.kt)("code",null,"GoogleSheets")," class")))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.authtype"},"authType")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/lightyear.authtype"},"AuthType")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.oauth"},"OAuth")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},"typeof ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheetsoauth"},"GoogleSheetsOAuth")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")))))),(0,r.kt)("h2",{id:"listener-methods"},"Listener Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.onnewrows"},"onNewRows(props)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"static")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," On new rows in a spreadsheet.")))),(0,r.kt)("h2",{id:"spreadsheet-methods"},"Spreadsheet Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.createspreadsheet"},"createSpreadsheet(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Creates a spreadsheet, returning the newly created spreadsheet.")))),(0,r.kt)("h2",{id:"value-methods"},"Value Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.appendvalues"},"appendValues(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Appends values to a spreadsheet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.clearvalues"},"clearValues(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Clear values from a spreadsheet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.getvalues"},"getValues(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Returns a range of values from a spreadsheet.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.updatevalues"},"updateValues(props)")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)"))," Sets values in a range of a spreadsheet.")))),(0,r.kt)("h2",{id:"other-methods"},"Other Methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.googlesheets.getbaseurl"},"getBaseUrl()")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("b",null,(0,r.kt)("i",null,"(BETA)")))))))}h.isMDXComponent=!0}}]);