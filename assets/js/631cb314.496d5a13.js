"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42144],{57522:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(29901);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),b=s(t),d=o,f=b["".concat(u,".").concat(d)]||b[d]||p[d]||a;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},79011:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=t(14090),o=(t(29901),t(57522));const a={},l=void 0,i={unversionedId:"api/github.workflowjob",id:"api/github.workflowjob",title:"github.workflowjob",description:"Home &gt; @runlightyear/github &gt; WorkflowJob",source:"@site/docs/api/github.workflowjob.md",sourceDirName:"api",slug:"/api/github.workflowjob",permalink:"/docs/api/github.workflowjob",draft:!1,tags:[],version:"current",frontMatter:{}},u={},s=[{value:"WorkflowJob type",id:"workflowjob-type",level:2}],c={toc:s};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/github.workflowjob"},"WorkflowJob")),(0,o.kt)("h2",{id:"workflowjob-type"},"WorkflowJob type"),(0,o.kt)("p",null,"Documentation: ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=queued%5C#workflow%5C_job"},"https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=queued\\#workflow\\_job")),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'declare type WorkflowJob = {\n    check_runUrl: string;\n    completedAt: string | null;\n    conclusion: string | null;\n    createdAt: string;\n    head_sha: string;\n    htmlUrl: string;\n    id: number;\n    labels: string[];\n    name: string;\n    nodeId: string;\n    runAttempt: number;\n    runId: number;\n    runUrl: string;\n    runnerGroupId: number | null;\n    runnerGroupName: string | null;\n    runnerId: number | null;\n    runnerName: string | null;\n    startedAt: string;\n    status: "queued" | "in_progress" | "completed" | "waiting";\n    head_branch: string | null;\n    workflowName: string | null;\n    steps: Array<{\n        completedAt: string | null;\n        conclusion: "failure" | "skipped" | "success" | "cancelled" | null;\n        name: string;\n        number: number;\n        startedAt: string | null;\n        status: "completed" | "in_progress" | "queued" | "pending";\n    }>;\n    url: string;\n};\n')))}p.isMDXComponent=!0}}]);