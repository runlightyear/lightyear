"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66812],{62757:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var r=n(67308);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=l(n),g=o,y=m["".concat(s,".").concat(g)]||m[g]||c[g]||a;return n?r.createElement(y,i(i({ref:t},p),{},{components:n})):r.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[m]="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},60746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(94790),o=(n(67308),n(62757));const a={},i=void 0,u={unversionedId:"api/github.github.onissuecomment",id:"api/github.github.onissuecomment",title:"github.github.onissuecomment",description:"Home &gt; @runlightyear/github &gt; GitHub &gt; onIssueComment",source:"@site/docs/api/github.github.onissuecomment.md",sourceDirName:"api",slug:"/api/github.github.onissuecomment",permalink:"/docs/api/github.github.onissuecomment",draft:!1,tags:[],version:"current",frontMatter:{}},s={},l=[{value:"GitHub.onIssueComment() method",id:"githubonissuecomment-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:l},m="wrapper";function c(e){let{components:t,...n}=e;return(0,o.yg)(m,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/github.github"},"GitHub")," ",">"," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/github.github.onissuecomment"},"onIssueComment")),(0,o.yg)("h2",{id:"githubonissuecomment-method"},"GitHub.onIssueComment() method"),(0,o.yg)("p",null,"This event occurs when there is activity relating to a comment on an issue or pull request."),(0,o.yg)("p",null,"For activity relating to an issue as opposed to comments on an issue, use the issue event. For activity related to pull request reviews or pull request review comments, use the pull","_","request","_","review or pull","_","request","_","review","_",'comment events. For more information about the different types of pull request comments, see "Working with comments."'),(0,o.yg)("b",null,"Signature:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"static onIssueComment(props: GitHubListenerProps<IssueCommentPayload>): {\n        webhook: string;\n        action: string;\n    };\n")),(0,o.yg)("h2",{id:"parameters"},"Parameters"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,o.yg)("th",{parentName:"tr",align:null},"Type"),(0,o.yg)("th",{parentName:"tr",align:null},"Description"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:null},"props"),(0,o.yg)("td",{parentName:"tr",align:null},(0,o.yg)("a",{parentName:"td",href:"/docs/api/github.githublistenerprops"},"GitHubListenerProps"),"<",(0,o.yg)("a",{parentName:"td",href:"/docs/api/github.issuecommentpayload"},"IssueCommentPayload"),">"),(0,o.yg)("td",{parentName:"tr",align:null})))),(0,o.yg)("b",null,"Returns:"),(0,o.yg)("p",null,"{ webhook: string; action: string; }"))}c.isMDXComponent=!0}}]);