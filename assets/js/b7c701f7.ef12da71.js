"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3345],{57522:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>m});var r=a(29901);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},i=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=n,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return a?r.createElement(k,o(o({ref:t},i),{},{components:a})):r.createElement(k,o({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3119:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=a(14090),n=(a(29901),a(57522));const l={},o=void 0,s={unversionedId:"api/salesforce.salesforce",id:"api/salesforce.salesforce",title:"salesforce.salesforce",description:"Home &gt; @runlightyear/salesforce &gt; Salesforce",source:"@site/docs/api/salesforce.salesforce.md",sourceDirName:"api",slug:"/api/salesforce.salesforce",permalink:"/docs/api/salesforce.salesforce",draft:!1,tags:[],version:"current",frontMatter:{}},p={},c=[{value:"Salesforce class",id:"salesforce-class",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 5",id:"example-5",level:2},{value:"Example 6",id:"example-6",level:2},{value:"Example 7",id:"example-7",level:2},{value:"Example 8",id:"example-8",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Describe Methods",id:"describe-methods",level:2},{value:"Query Methods",id:"query-methods",level:2},{value:"Record Methods",id:"record-methods",level:2}],i={toc:c};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/salesforce"},"@runlightyear/salesforce")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/salesforce.salesforce"},"Salesforce")),(0,n.kt)("h2",{id:"salesforce-class"},"Salesforce class"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,n.kt)("p",null,"Salesforce connector"),(0,n.kt)("b",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"declare class Salesforce extends RestConnector \n")),(0,n.kt)("p",null,"Extends: "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/lightyear.restconnector"},"RestConnector")),(0,n.kt)("h2",{id:"example-1"},"Example 1"),(0,n.kt)("p",null,"Install"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install @runlightyear/salesforce\n")),(0,n.kt)("h2",{id:"example-2"},"Example 2"),(0,n.kt)("p",null,"Import"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Salesforce } from "@runlightyear/salesforce";\n')),(0,n.kt)("h2",{id:"example-3"},"Example 3"),(0,n.kt)("p",null,"Use in an action"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'defineAction({\n  name: "salesforce-example",\n  title: "Salesforce Example",\n  apps: ["salesforce"],\n  run: async ({ auths }) => {\n    const salesforce = new Salesforce({\n      auth: auths.salesforce,\n      domain: "<your salesforce domain name>",\n    });\n});\n')),(0,n.kt)("h2",{id:"example-4"},"Example 4"),(0,n.kt)("p",null,"Get a list of accounts"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"const response = await salesforce.query({\n  q: `SELECT Name FROM Account`,\n});\n\nconst accounts = response.data.records;\n")),(0,n.kt)("h2",{id:"example-5"},"Example 5"),(0,n.kt)("p",null,"Page through a long list of accounts"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'let response = await salesforce.query({ q: `SELECT Name from Account` });\n\nconsole.log("First batch of accounts", response.data.records);\n\nwhile (!response.data.done) {\n  response = await salesforce.query({\n    nextRecordsUrl: response.data.nextRecordsUrl,\n  });\n\n  console.log("Next batch of accounts", response.data.records);\n}\n')),(0,n.kt)("h2",{id:"example-6"},"Example 6"),(0,n.kt)("p",null,"Create an account"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'const response = await salesforce.createRecord({\n  objectType: "Account",\n  fieldValues: { Name: "A New Account" },\n});\n\nconsole.log("Created new account", response.data.id);\n')),(0,n.kt)("h2",{id:"example-7"},"Example 7"),(0,n.kt)("p",null,"Get the list of field names on Contacts"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'const response = await salesforce.describeObject({ objectType: "Contact" });\n\nconsole.log(\n  "fields:",\n  response.data.fields.map((field) => field.name)\n);\n')),(0,n.kt)("h2",{id:"example-8"},"Example 8"),(0,n.kt)("p",null,"Full example: Poll for new leads once a minute"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction, setVariable } from "@runlightyear/lightyear";\nimport { Salesforce } from "@runlightyear/salesforce";\n\ndefineAction({\n  name: "get-new-leads",\n  title: "Get New Leads",\n  apps: ["salesforce"],\n  variables: ["lastCreatedDate"],\n  trigger: {\n    pollingFrequency: 1,\n  },\n  run: async ({ auths, variables }) => {\n    const salesforce = new Salesforce({\n      auth: auths.salesforce,\n      domain: "<your salesforce domain name>",\n    });\n\n    const response = await salesforce.query({\n      q: `SELECT Name, CreatedDate from Lead WHERE CreatedDate > ${\n        variables.lastCreatedDate || "YESTERDAY"\n      } ORDER BY CreatedDate`,\n    });\n\n    const newLeads = response.data.records;\n\n    if (newLeads.length > 0) {\n      console.log(\n        "New leads",\n        newLeads.map((lead) => lead.name)\n      );\n\n      await setVariable(\n        "lastCreatedDate",\n        String(newLeads[newLeads.length - 1].createdDate)\n      );\n    }\n  },\n});\n')),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Constructor"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce._constructor_"},"(constructor)(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Constructs a new instance of the ",(0,n.kt)("code",null,"Salesforce")," class")))),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Property"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.domain"},"domain")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)")))))),(0,n.kt)("h2",{id:"describe-methods"},"Describe Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.describeobject"},"describeObject(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Describe an Object")))),(0,n.kt)("h2",{id:"query-methods"},"Query Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.query"},"query(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Run a SOQL Query")))),(0,n.kt)("h2",{id:"record-methods"},"Record Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.createrecord"},"createRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Create a Record")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.deleterecord"},"deleteRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Delete a Record")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.getrecord"},"getRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Get a Record")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/salesforce.salesforce.updaterecord"},"updateRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Update a Record")))))}d.isMDXComponent=!0}}]);