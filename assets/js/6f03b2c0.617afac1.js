"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[14521],{15741:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>p,metadata:()=>u,toc:()=>l});var n=r(42664),a=(r(67308),r(62757));const p={},o=void 0,u={unversionedId:"api/github.updatepullrequestprops.base",id:"api/github.updatepullrequestprops.base",title:"github.updatepullrequestprops.base",description:"Home &gt; @runlightyear/github &gt; UpdatePullRequestProps &gt; base",source:"@site/docs/api/github.updatepullrequestprops.base.md",sourceDirName:"api",slug:"/api/github.updatepullrequestprops.base",permalink:"/docs/api/github.updatepullrequestprops.base",draft:!1,tags:[],version:"current",frontMatter:{}},s={},l=[{value:"UpdatePullRequestProps.base property",id:"updatepullrequestpropsbase-property",level:2}],i={toc:l},c="wrapper";function y(e){let{components:t,...r}=e;return(0,a.yg)(c,(0,n.A)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github.updatepullrequestprops"},"UpdatePullRequestProps")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github.updatepullrequestprops.base"},"base")),(0,a.yg)("h2",{id:"updatepullrequestpropsbase-property"},"UpdatePullRequestProps.base property"),(0,a.yg)("p",null,"The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository."),(0,a.yg)("b",null,"Signature:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"base?: string;\n")))}y.isMDXComponent=!0},62757:(e,t,r)=>{r.d(t,{xA:()=>i,yg:()=>d});var n=r(67308);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},i=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),c=l(r),b=a,d=c["".concat(s,".").concat(b)]||c[b]||y[b]||p;return r?n.createElement(d,o(o({ref:t},i),{},{components:r})):n.createElement(d,o({ref:t},i))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,o=new Array(p);o[0]=b;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[c]="string"==typeof e?e:a,o[1]=u;for(var l=2;l<p;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);