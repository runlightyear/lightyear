"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[44642],{57522:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var o=t(29901);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),p=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return o.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=r,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||a;return t?o.createElement(f,l(l({ref:n},s),{},{components:t})):o.createElement(f,l({ref:n},s))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},18789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=t(14090),r=(t(29901),t(57522));const a={},l=void 0,i={unversionedId:"api/zoom.zoom.definepollrecordingsaction",id:"api/zoom.zoom.definepollrecordingsaction",title:"zoom.zoom.definepollrecordingsaction",description:"Home &gt; @runlightyear/zoom &gt; Zoom &gt; definePollRecordingsAction",source:"@site/docs/api/zoom.zoom.definepollrecordingsaction.md",sourceDirName:"api",slug:"/api/zoom.zoom.definepollrecordingsaction",permalink:"/docs/api/zoom.zoom.definepollrecordingsaction",draft:!1,tags:[],version:"current",frontMatter:{}},c={},p=[{value:"Zoom.definePollRecordingsAction() method",id:"zoomdefinepollrecordingsaction-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2}],s={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/zoom"},"@runlightyear/zoom")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/zoom.zoom"},"Zoom")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/zoom.zoom.definepollrecordingsaction"},"definePollRecordingsAction")),(0,r.kt)("h2",{id:"zoomdefinepollrecordingsaction-method"},"Zoom.definePollRecordingsAction() method"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,r.kt)("p",null,"Poll for new cloud recordings"),(0,r.kt)("b",null,"Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"static definePollRecordingsAction(props: DefinePollRecordingsActionProps): string;\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"props"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/zoom.definepollrecordingsactionprops"},"DefinePollRecordingsActionProps")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("b",null,"Returns:"),(0,r.kt)("p",null,"string"),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"Poll for completed cloud recordings every minute"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'Zoom.definePollRecordingsAction({\n  name: "poll-for-recordings",\n  title: "Poll for Recordings",\n  pollingFrequency: 1,\n  run: async ({ data }) => {\n    console.log("recordings", data);\n  }\n})\n')),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"Full example: Poll for completed cloud recordings every 15 minutes and post to Slack"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Zoom } from "@runlightyear/zoom";\nimport { Slack } from "@runlightyear/slack";\n\nZoom.definePollRecordingsAction({\n  name: "post-new-recordings-to-slack",\n  title: "Post New Zoom Recordings to Slack",\n  pollingFrequency: 15,\n  apps: ["slack"],\n  run: async ({ auths, data }) => {\n    const slack = new Slack({ auth: auths.slack });\n\n    for (const recording of data) {\n      await slack.postMessage({\n        channel: "#general",\n        text: `New recording: ${recording.shareUrl}`,\n      });\n    }\n  },\n});\n')))}d.isMDXComponent=!0}}]);