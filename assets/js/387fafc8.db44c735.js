"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[88845],{62757:(e,r,t)=>{t.d(r,{xA:()=>i,yg:()=>g});var n=t(67308);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},i=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},b=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),c=l(t),b=a,g=c["".concat(s,".").concat(b)]||c[b]||y[b]||o;return t?n.createElement(g,p(p({ref:r},i),{},{components:t})):n.createElement(g,p({ref:r},i))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=b;var u={};for(var s in r)hasOwnProperty.call(r,s)&&(u[s]=r[s]);u.originalType=e,u[c]="string"==typeof e?e:a,p[1]=u;for(var l=2;l<o;l++)p[l]=t[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}b.displayName="MDXCreateElement"},6685:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>p,default:()=>y,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var n=t(94790),a=(t(67308),t(62757));const o={},p=void 0,u={unversionedId:"api/github.createpullrequestprops.base",id:"api/github.createpullrequestprops.base",title:"github.createpullrequestprops.base",description:"Home &gt; @runlightyear/github &gt; CreatePullRequestProps &gt; base",source:"@site/docs/api/github.createpullrequestprops.base.md",sourceDirName:"api",slug:"/api/github.createpullrequestprops.base",permalink:"/docs/api/github.createpullrequestprops.base",draft:!1,tags:[],version:"current",frontMatter:{}},s={},l=[{value:"CreatePullRequestProps.base property",id:"createpullrequestpropsbase-property",level:2}],i={toc:l},c="wrapper";function y(e){let{components:r,...t}=e;return(0,a.yg)(c,(0,n.A)({},i,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github.createpullrequestprops"},"CreatePullRequestProps")," ",">"," ",(0,a.yg)("a",{parentName:"p",href:"/docs/api/github.createpullrequestprops.base"},"base")),(0,a.yg)("h2",{id:"createpullrequestpropsbase-property"},"CreatePullRequestProps.base property"),(0,a.yg)("p",null,"The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."),(0,a.yg)("b",null,"Signature:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"base: string;\n")))}y.isMDXComponent=!0}}]);