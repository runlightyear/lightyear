"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[82668],{57522:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>d});var a=t(29901);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},i=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),m=l(t),d=r,y=m["".concat(p,".").concat(d)]||m[d]||u[d]||s;return t?a.createElement(y,c(c({ref:n},i),{},{components:t})):a.createElement(y,c({ref:n},i))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,c=new Array(s);c[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var l=2;l<s;l++)c[l]=t[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},98118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(14090),r=(t(29901),t(57522));const s={},c=void 0,o={unversionedId:"api/slack.messageeventsubtype",id:"api/slack.messageeventsubtype",title:"slack.messageeventsubtype",description:"Home &gt; @runlightyear/slack &gt; MessageEventSubtype",source:"@site/docs/api/slack.messageeventsubtype.md",sourceDirName:"api",slug:"/api/slack.messageeventsubtype",permalink:"/docs/api/slack.messageeventsubtype",draft:!1,tags:[],version:"current",frontMatter:{}},p={},l=[{value:"MessageEventSubtype type",id:"messageeventsubtype-type",level:2}],i={toc:l};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/slack"},"@runlightyear/slack")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/slack.messageeventsubtype"},"MessageEventSubtype")),(0,r.kt)("h2",{id:"messageeventsubtype-type"},"MessageEventSubtype type"),(0,r.kt)("b",null,"Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'declare type MessageEventSubtype = \n/**\n * A message was posted by an integration\n */\n"bot_message"\n/**\n * A /me message was sent\n */\n | "me_message"\n/**\n * A message was changed\n */\n | "message_changed"\n/**\n * A message was deleted\n */\n | "message_deleted"\n/**\n * A message thread received a reply\n */\n | "message_replied"\n/**\n * A message thread\'s reply was broadcast to a channel\n */\n | "thread_broadcast"\n/**\n * A member joined a channel\n */\n | "channel_join"\n/**\n * A member left a channel\n */\n | "channel_leave"\n/**\n * A channel topic was updated\n */\n | "channel_topic"\n/**\n * A channel purpose was updated\n */\n | "channel_purpose"\n/**\n * A channel was renamed\n */\n | "channel_name"\n/**\n * A channel was archived\n */\n | "channel_archive"\n/**\n * A channel was unarchived\n */\n | "channel_unarchive"\n/**\n * A file was shared into a channel\n */\n | "file_share"\n/**\n * Message content redacted due to Enterprise Key Management (EKM)\n */\n | "ekm_access_denied"\n/**\n * The posting permissions for a channel changed\n */\n | "channel_posting_permissions";\n')))}u.isMDXComponent=!0}}]);