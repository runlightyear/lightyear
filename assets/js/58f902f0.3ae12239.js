"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5951],{62757:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>c});var a=t(67308);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},i="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),i=u(t),m=r,c=i["".concat(p,".").concat(m)]||i[m]||d[m]||s;return t?a.createElement(c,o(o({ref:n},g),{},{components:t})):a.createElement(c,o({ref:n},g))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[i]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<s;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},20738:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=t(94790),r=(t(67308),t(62757));const s={},o=void 0,l={unversionedId:"api/gsheets.googlesheets.updatevalues",id:"api/gsheets.googlesheets.updatevalues",title:"gsheets.googlesheets.updatevalues",description:"Home &gt; @runlightyear/gsheets &gt; GoogleSheets &gt; updateValues",source:"@site/docs/api/gsheets.googlesheets.updatevalues.md",sourceDirName:"api",slug:"/api/gsheets.googlesheets.updatevalues",permalink:"/docs/api/gsheets.googlesheets.updatevalues",draft:!1,tags:[],version:"current",frontMatter:{}},p={},u=[{value:"GoogleSheets.updateValues() method",id:"googlesheetsupdatevalues-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2}],g={toc:u},i="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(i,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,r.yg)("a",{parentName:"p",href:"/docs/api/gsheets"},"@runlightyear/gsheets")," ",">"," ",(0,r.yg)("a",{parentName:"p",href:"/docs/api/gsheets.googlesheets"},"GoogleSheets")," ",">"," ",(0,r.yg)("a",{parentName:"p",href:"/docs/api/gsheets.googlesheets.updatevalues"},"updateValues")),(0,r.yg)("h2",{id:"googlesheetsupdatevalues-method"},"GoogleSheets.updateValues() method"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"This API is in beta and may contain contain bugs. Can be used in production with caution.")),(0,r.yg)("p",null,"Sets values in a range of a spreadsheet."),(0,r.yg)("b",null,"Signature:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"updateValues(props: UpdateValuesProps): Promise<UpdateValuesResponse>;\n")),(0,r.yg)("h2",{id:"parameters"},"Parameters"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"props"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"/docs/api/gsheets.updatevaluesprops"},"UpdateValuesProps")),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("b",null,"Returns:"),(0,r.yg)("p",null,"Promise","<",(0,r.yg)("a",{parentName:"p",href:"/docs/api/gsheets.updatevaluesresponse"},"UpdateValuesResponse"),">"),(0,r.yg)("h2",{id:"example-1"},"Example 1"),(0,r.yg)("p",null,"Update a row"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateRow",\n  title: "Update Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "1:1",\n        majorDimension: "ROWS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.yg)("h2",{id:"example-2"},"Example 2"),(0,r.yg)("p",null,"Update a column"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateColumn",\n  title: "Update Column",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A:A",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A:A",\n        majorDimension: "COLUMNS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.yg)("h2",{id:"example-3"},"Example 3"),(0,r.yg)("p",null,"Update rows and columns"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "updateRowsAndColumns",\n  title: "Update Rows and Columns",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A1:C3",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A1:C3",\n        majorDimension: "ROWS",\n        values: [\n          [1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9],\n        ],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')))}d.isMDXComponent=!0}}]);