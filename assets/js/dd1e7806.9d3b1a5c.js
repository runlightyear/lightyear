"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4629],{57522:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(29901);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(a),m=l,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||n;return a?r.createElement(f,i(i({ref:t},c),{},{components:a})):r.createElement(f,i({ref:t},c))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<n;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},75558:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>s});var r=a(14090),l=(a(29901),a(57522));const n={},i=void 0,o={unversionedId:"api/linear.issuelabelcollectionfilter",id:"api/linear.issuelabelcollectionfilter",title:"linear.issuelabelcollectionfilter",description:"Home &gt; @runlightyear/linear &gt; IssueLabelCollectionFilter",source:"@site/docs/api/linear.issuelabelcollectionfilter.md",sourceDirName:"api",slug:"/api/linear.issuelabelcollectionfilter",permalink:"/docs/api/linear.issuelabelcollectionfilter",draft:!1,tags:[],version:"current",frontMatter:{}},p={},s=[{value:"IssueLabelCollectionFilter interface",id:"issuelabelcollectionfilter-interface",level:2},{value:"Optional Properties",id:"optional-properties",level:2}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/docs/api/linear"},"@runlightyear/linear")," ",">"," ",(0,l.kt)("a",{parentName:"p",href:"/docs/api/linear.issuelabelcollectionfilter"},"IssueLabelCollectionFilter")),(0,l.kt)("h2",{id:"issuelabelcollectionfilter-interface"},"IssueLabelCollectionFilter interface"),(0,l.kt)("b",null,"Signature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"interface IssueLabelCollectionFilter \n")),(0,l.kt)("h2",{id:"optional-properties"},"Optional Properties"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.and"},"and?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Array","<",(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter"},"IssueLabelCollectionFilter"),">"),(0,l.kt)("td",{parentName:"tr",align:null},"Compound filters, all of which need to be matched by the label.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.createdat"},"createdAt?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.datecomparator"},"DateComparator")),(0,l.kt)("td",{parentName:"tr",align:null},"Comparator for the created at date.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.creator"},"creator?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.nullableuserfilter"},"NullableUserFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Filters that the issue labels creator must satisfy.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.every"},"every?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelfilter"},"IssueLabelFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Filters that needs to be matched by all issue labels.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.id"},"id?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.idcomparator"},"IDComparator")),(0,l.kt)("td",{parentName:"tr",align:null},"Comparator for the identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.length"},"length?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.numbercomparator"},"NumberComparator")),(0,l.kt)("td",{parentName:"tr",align:null},"Comparator for the collection length.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.name"},"name?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.stringcomparator"},"StringComparator")),(0,l.kt)("td",{parentName:"tr",align:null},"Comparator for the name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.or"},"or?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Array","<",(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter"},"IssueLabelCollectionFilter"),">"),(0,l.kt)("td",{parentName:"tr",align:null},"Compound filters, one of which need to be matched by the label.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.parent"},"parent?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelfilter"},"IssueLabelFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Filters that the issue label's parent label must satisfy.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.some"},"some?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelfilter"},"IssueLabelFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Filters that needs to be matched by some issue labels.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.team"},"team?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.teamfilter"},"TeamFilter")),(0,l.kt)("td",{parentName:"tr",align:null},"Filters that the issue labels team must satisfy.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.issuelabelcollectionfilter.updatedat"},"updatedAt?")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/api/linear.datecomparator"},"DateComparator")),(0,l.kt)("td",{parentName:"tr",align:null},"Comparator for the updated at date.")))))}d.isMDXComponent=!0}}]);