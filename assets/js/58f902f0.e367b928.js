"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[96853],{57522:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>c});var a=n(29901);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=u(n),c=r,g=m["".concat(p,".").concat(c)]||m[c]||d[c]||s;return n?a.createElement(g,o(o({ref:t},i),{},{components:n})):a.createElement(g,o({ref:t},i))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<s;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62319:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(14090),r=(n(29901),n(57522));const s={},o=void 0,l={unversionedId:"api/gsheets.googlesheets.updatevalues",id:"api/gsheets.googlesheets.updatevalues",title:"gsheets.googlesheets.updatevalues",description:"Home &gt; @runlightyear/gsheets &gt; GoogleSheets &gt; updateValues",source:"@site/docs/api/gsheets.googlesheets.updatevalues.md",sourceDirName:"api",slug:"/api/gsheets.googlesheets.updatevalues",permalink:"/docs/api/gsheets.googlesheets.updatevalues",draft:!1,tags:[],version:"current",frontMatter:{}},p={},u=[{value:"GoogleSheets.updateValues() method",id:"googlesheetsupdatevalues-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2}],i={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets"},"@runlightyear/gsheets")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets.googlesheets"},"GoogleSheets")," ",">"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets.googlesheets.updatevalues"},"updateValues")),(0,r.kt)("h2",{id:"googlesheetsupdatevalues-method"},"GoogleSheets.updateValues() method"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is in beta and may contain contain bugs. Can be used in production with caution.")),(0,r.kt)("p",null,"Sets values in a range of a spreadsheet."),(0,r.kt)("b",null,"Signature:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"updateValues(props: UpdateValuesProps): Promise<UpdateValuesResponse>;\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"props"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/api/gsheets.updatevaluesprops"},"UpdateValuesProps")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("b",null,"Returns:"),(0,r.kt)("p",null,"Promise","<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/gsheets.updatevaluesresponse"},"UpdateValuesResponse"),">"),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("p",null,"Update a row"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateRow",\n  title: "Update Row",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "1:1",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "1:1",\n        majorDimension: "ROWS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("p",null,"Update a column"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\nfunction randomNumber() {\n  return Math.floor(Math.random() * 10);\n}\n\ndefineAction({\n  name: "updateColumn",\n  title: "Update Column",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A:A",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A:A",\n        majorDimension: "COLUMNS",\n        values: [[randomNumber(), randomNumber(), randomNumber()]],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,r.kt)("h2",{id:"example-3"},"Example 3"),(0,r.kt)("p",null,"Update rows and columns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { GoogleSheets } from "@runlightyear/gsheets";\n\ndefineAction({\n  name: "updateRowsAndColumns",\n  title: "Update Rows and Columns",\n  apps: ["gsheets"],\n  variables: ["spreadsheetId"],\n  run: async ({ auths, variables }) => {\n    const gsheets = new GoogleSheets({\n      auth: auths.gsheets,\n    });\n\n    const response = await gsheets.updateValues({\n      spreadsheetId: variables.spreadsheetId!,\n      range: "A1:C3",\n      valueInputOption: "RAW",\n      valueRange: {\n        range: "A1:C3",\n        majorDimension: "ROWS",\n        values: [\n          [1, 2, 3],\n          [4, 5, 6],\n          [7, 8, 9],\n        ],\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')))}d.isMDXComponent=!0}}]);