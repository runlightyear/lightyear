"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[71179],{62757:(e,t,o)=>{o.d(t,{xA:()=>s,yg:()=>g});var r=o(67308);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function p(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(o),f=n,g=u["".concat(l,".").concat(f)]||u[f]||m[f]||a;return o?r.createElement(g,i(i({ref:t},s),{},{components:o})):r.createElement(g,i({ref:t},s))}));function g(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var c=2;c<a;c++)i[c]=o[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}f.displayName="MDXCreateElement"},70666:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=o(42664),n=(o(67308),o(62757));const a={},i=void 0,p={unversionedId:"api/openai.createcompletionprops.logitbias",id:"api/openai.createcompletionprops.logitbias",title:"openai.createcompletionprops.logitbias",description:"Home &gt; @runlightyear/openai &gt; CreateCompletionProps &gt; logitBias",source:"@site/docs/api/openai.createcompletionprops.logitbias.md",sourceDirName:"api",slug:"/api/openai.createcompletionprops.logitbias",permalink:"/docs/api/openai.createcompletionprops.logitbias",draft:!1,tags:[],version:"current",frontMatter:{}},l={},c=[{value:"CreateCompletionProps.logitBias property",id:"createcompletionpropslogitbias-property",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...o}=e;return(0,n.yg)(u,(0,r.A)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/openai"},"@runlightyear/openai")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/openai.createcompletionprops"},"CreateCompletionProps")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/openai.createcompletionprops.logitbias"},"logitBias")),(0,n.yg)("h2",{id:"createcompletionpropslogitbias-property"},"CreateCompletionProps.logitBias property"),(0,n.yg)("p",null,"Defaults to null Modify the likelihood of specified tokens appearing in the completion."),(0,n.yg)("p",null,"Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token."),(0,n.yg)("p",null,"As an example, you can pass {",'"50256": -100',"} to prevent the ","<","|","endoftext","|",">"," token from being generated."),(0,n.yg)("b",null,"Signature:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},"logitBias?: object | null;\n")))}m.isMDXComponent=!0}}]);