"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[22244],{62757:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>d});var t=r(67308);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},b=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(r),b=o,d=p["".concat(u,".").concat(b)]||p[b]||g[b]||a;return r?t.createElement(d,l(l({ref:n},c),{},{components:r})):t.createElement(d,l({ref:n},c))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=b;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}b.displayName="MDXCreateElement"},71404:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var t=r(94790),o=(r(67308),r(62757));const a={},l=void 0,i={unversionedId:"api/github.workflowjob",id:"api/github.workflowjob",title:"github.workflowjob",description:"Home &gt; @runlightyear/github &gt; WorkflowJob",source:"@site/docs/api/github.workflowjob.md",sourceDirName:"api",slug:"/api/github.workflowjob",permalink:"/docs/api/github.workflowjob",draft:!1,tags:[],version:"current",frontMatter:{}},u={},s=[{value:"WorkflowJob type",id:"workflowjob-type",level:2}],c={toc:s},p="wrapper";function g(e){let{components:n,...r}=e;return(0,o.yg)(p,(0,t.A)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,o.yg)("a",{parentName:"p",href:"/docs/api/github.workflowjob"},"WorkflowJob")),(0,o.yg)("h2",{id:"workflowjob-type"},"WorkflowJob type"),(0,o.yg)("p",null,"Documentation: ",(0,o.yg)("a",{parentName:"p",href:"https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=queued%5C#workflow%5C_job"},"https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads?actionType=queued\\#workflow\\_job")),(0,o.yg)("b",null,"Signature:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},'declare type WorkflowJob = {\n    check_runUrl: string;\n    completedAt: string | null;\n    conclusion: string | null;\n    createdAt: string;\n    head_sha: string;\n    htmlUrl: string;\n    id: number;\n    labels: string[];\n    name: string;\n    nodeId: string;\n    runAttempt: number;\n    runId: number;\n    runUrl: string;\n    runnerGroupId: number | null;\n    runnerGroupName: string | null;\n    runnerId: number | null;\n    runnerName: string | null;\n    startedAt: string;\n    status: "queued" | "in_progress" | "completed" | "waiting";\n    head_branch: string | null;\n    workflowName: string | null;\n    steps: Array<{\n        completedAt: string | null;\n        conclusion: "failure" | "skipped" | "success" | "cancelled" | null;\n        name: string;\n        number: number;\n        startedAt: string | null;\n        status: "completed" | "in_progress" | "queued" | "pending";\n    }>;\n    url: string;\n};\n')))}g.isMDXComponent=!0}}]);