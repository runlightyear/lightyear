"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[41047],{62757:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>y});var a=r(67308);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),i=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),s=i(r),c=n,y=s["".concat(p,".").concat(c)]||s[c]||g[c]||l;return r?a.createElement(y,o(o({ref:t},d),{},{components:r})):a.createElement(y,o({ref:t},d))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u[s]="string"==typeof e?e:n,o[1]=u;for(var i=2;i<l;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},17284:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>i});var a=r(94790),n=(r(67308),r(62757));const l={},o=void 0,u={unversionedId:"api/github.pullrequestpayload",id:"api/github.pullrequestpayload",title:"github.pullrequestpayload",description:"Home &gt; @runlightyear/github &gt; PullRequestPayload",source:"@site/docs/api/github.pullrequestpayload.md",sourceDirName:"api",slug:"/api/github.pullrequestpayload",permalink:"/docs/api/github.pullrequestpayload",draft:!1,tags:[],version:"current",frontMatter:{}},p={},i=[{value:"PullRequestPayload interface",id:"pullrequestpayload-interface",level:2},{value:"Required Properties",id:"required-properties",level:2}],d={toc:i},s="wrapper";function g(e){let{components:t,...r}=e;return(0,n.yg)(s,(0,a.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/github.pullrequestpayload"},"PullRequestPayload")),(0,n.yg)("h2",{id:"pullrequestpayload-interface"},"PullRequestPayload interface"),(0,n.yg)("p",null,"Documentation: ",(0,n.yg)("a",{parentName:"p",href:"https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads%5C#pull%5C_request"},"https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads\\#pull\\_request")),(0,n.yg)("b",null,"Signature:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},"interface PullRequestPayload extends CommonPayload \n")),(0,n.yg)("b",null,"Extends:"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/api/github.commonpayload"},"CommonPayload")),(0,n.yg)("h2",{id:"required-properties"},"Required Properties"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Property"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/github.pullrequestpayload.action"},"action")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},'"assigned" ',"|",' "auto',"_","merge","_",'disabled" ',"|",' "auto',"_","merge","_",'enabled" /',"*","*"," ","*"," If the action is closed and the merged key is false, the pull request was closed with unmerged commits. If the action is closed and the merged key is true, the pull request was merged. ","*","/ ","|",' "closed" ',"|",' "converted',"_","to","_",'draft" ',"|",' "edited" ',"|",' "labeled" ',"|",' "locked" ',"|",' "opened" ',"|",' "ready',"_","for","_",'review" ',"|",' "reopened" ',"|",' "review',"_","request","_",'removed" ',"|",' "review',"_",'requested" /',"*","*"," ","*"," Triggered when a pull request's head branch is updated. For example, when the head branch is updated from the base branch, when new commits are pushed to the head branch, or when the base branch is changed.\" ","*","/ ","|",' "synchronize" ',"|",' "unassigned" ',"|",' "unlabeled" ',"|",' "unlocked"'),(0,n.yg)("td",{parentName:"tr",align:null},"The action that was performed.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/github.pullrequestpayload.changes"},"changes")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"{ title: { from: string; }; body: { from: string; }; }"),(0,n.yg)("td",{parentName:"tr",align:null},"The changes to the comment if the action was edited.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/github.pullrequestpayload.number"},"number")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"number"),(0,n.yg)("td",{parentName:"tr",align:null},"The pull request number.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/github.pullrequestpayload.pullrequest"},"pullRequest")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"object"),(0,n.yg)("td",{parentName:"tr",align:null},"The pull request itself.")))))}g.isMDXComponent=!0}}]);