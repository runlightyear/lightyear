"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[94077],{57522:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var r=a(29901);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=n,b=m["".concat(s,".").concat(u)]||m[u]||c[u]||l;return a?r.createElement(b,i(i({ref:t},d),{},{components:a})):r.createElement(b,i({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},15414:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=a(14090),n=(a(29901),a(57522));const l={},i=void 0,o={unversionedId:"api/airtable.airtable",id:"api/airtable.airtable",title:"airtable.airtable",description:"Home &gt; @runlightyear/airtable &gt; Airtable",source:"@site/docs/api/airtable.airtable.md",sourceDirName:"api",slug:"/api/airtable.airtable",permalink:"/docs/api/airtable.airtable",draft:!1,tags:[],version:"current",frontMatter:{}},s={},p=[{value:"Airtable class",id:"airtable-class",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 5",id:"example-5",level:2},{value:"Example 6",id:"example-6",level:2},{value:"Example 7",id:"example-7",level:2},{value:"Example 8",id:"example-8",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Base Methods",id:"base-methods",level:2},{value:"Meta Methods",id:"meta-methods",level:2},{value:"Records Methods",id:"records-methods",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/airtable"},"@runlightyear/airtable")," ",">"," ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/airtable.airtable"},"Airtable")),(0,n.kt)("h2",{id:"airtable-class"},"Airtable class"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This API is in beta and may contain contain bugs. Can be used in production with caution.")),(0,n.kt)("p",null,"Connector to the Airtable API"),(0,n.kt)("b",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"declare class Airtable extends RestConnector \n")),(0,n.kt)("p",null,"Extends: "),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/api/lightyear.restconnector"},"RestConnector")),(0,n.kt)("h2",{id:"example-1"},"Example 1"),(0,n.kt)("p",null,"Import"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Airtable } from "@runlightyear/airtable"\n')),(0,n.kt)("h2",{id:"example-2"},"Example 2"),(0,n.kt)("p",null,"Use in an action"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'defineAction({\n  name: "airtableExample",\n  title: "Airtable Example"\n  apps: ["airtable"],\n  run: async ({ auths }) => {\n    const airtable = new Airtable({ auth: auths.airtable });\n  }\n}\n')),(0,n.kt)("h2",{id:"example-3"},"Example 3"),(0,n.kt)("p",null,"Create a single record"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "createSingleRecord",\n  title: "Create Single Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "name"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n    const response = await airtable.createRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      fields: {\n        Name: variables.name!,\n      },\n    });\n\n    console.log("Record: ", response.data);\n  },\n});\n')),(0,n.kt)("h2",{id:"example-4"},"Example 4"),(0,n.kt)("p",null,"Create multiple records"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "createMultipleRecords",\n  title: "Create Multiple Records",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.createRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      records: [\n        {\n          fields: {\n            Name: "Union Square",\n          },\n        },\n        {\n          fields: {\n            Name: "Ferry Building",\n          },\n        },\n      ],\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.kt)("h2",{id:"example-5"},"Example 5"),(0,n.kt)("p",null,"Get a record"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "getRecord",\n  title: "Get Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.getRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.kt)("h2",{id:"example-6"},"Example 6"),(0,n.kt)("p",null,"Update a record"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "updateRecord",\n  title: "Update Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId", "name"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.updateRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n      fields: {\n        Name: variables.name!,\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.kt)("h2",{id:"example-7"},"Example 7"),(0,n.kt)("p",null,"Delete a record"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "deleteRecord",\n  title: "Delete Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.deleteRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.kt)("h2",{id:"example-8"},"Example 8"),(0,n.kt)("p",null,"List records"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "listRecords",\n  title: "List Records",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.listRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordMetadata: ["commentCount"],\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n\n@example Who am I?\n')),(0,n.kt)("p",null,'typescript import { defineAction } from "',"@",'runlightyear/lightyear"; import { Airtable } from "',"@",'runlightyear/airtable";'),(0,n.kt)("p",null,"defineAction(",'{ name: "whoami", title: "Who Am I?", apps: ',"[",'"airtable"',"]",", run: async (","{ auths, variables }",") =",">"," { const airtable = new Airtable(","{ auth: auths.airtable }",");"),(0,n.kt)("p",null,"const response = await airtable.whoami();"),(0,n.kt)("p",null,'console.log("Response: ", response.data); }',", }","); ","`","`","`"),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Constructor"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable._constructor_"},"(constructor)(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Constructs a new instance of the ",(0,n.kt)("code",null,"Airtable")," class")))),(0,n.kt)("h2",{id:"base-methods"},"Base Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.getbaseschema"},"getBaseSchema(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Get base schema")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.listbases"},"listBases(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," List bases")))),(0,n.kt)("h2",{id:"meta-methods"},"Meta Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.whoami"},"whoami()")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Retrieve the user ID and, for OAuth access tokens, the scopes associated with the token used.")))),(0,n.kt)("h2",{id:"records-methods"},"Records Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.createrecords"},"createRecords(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Creates multiple records.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.deleterecord"},"deleteRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Delete record")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.getrecord"},"getRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Get record")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.listrecords"},"listRecords(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," List records in a table.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/airtable.airtable.updaterecord"},"updateRecord(props)")),(0,n.kt)("td",{parentName:"tr",align:null}),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("b",null,(0,n.kt)("i",null,"(BETA)"))," Update record")))))}c.isMDXComponent=!0}}]);