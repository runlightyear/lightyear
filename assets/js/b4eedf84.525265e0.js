"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9144],{57522:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>b});var o=r(29901);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},l=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),l=s(r),b=a,h=l["".concat(c,".").concat(b)]||l[b]||u[b]||n;return r?o.createElement(h,p(p({ref:t},m),{},{components:r})):o.createElement(h,p({ref:t},m))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,p=new Array(n);p[0]=l;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<n;s++)p[s]=r[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,r)}l.displayName="MDXCreateElement"},77224:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>s});var o=r(14090),a=(r(29901),r(57522));const n={},p=void 0,i={unversionedId:"api/github.comparetwocommitsprops.basehead",id:"api/github.comparetwocommitsprops.basehead",title:"github.comparetwocommitsprops.basehead",description:"Home &gt; @runlightyear/github &gt; CompareTwoCommitsProps &gt; basehead",source:"@site/docs/api/github.comparetwocommitsprops.basehead.md",sourceDirName:"api",slug:"/api/github.comparetwocommitsprops.basehead",permalink:"/docs/api/github.comparetwocommitsprops.basehead",draft:!1,tags:[],version:"current",frontMatter:{}},c={},s=[{value:"CompareTwoCommitsProps.basehead property",id:"comparetwocommitspropsbasehead-property",level:2}],m={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/github.comparetwocommitsprops"},"CompareTwoCommitsProps")," ",">"," ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/github.comparetwocommitsprops.basehead"},"basehead")),(0,a.kt)("h2",{id:"comparetwocommitspropsbasehead-property"},"CompareTwoCommitsProps.basehead property"),(0,a.kt)("p",null,"The base branch and head branch to compare. This parameter expects the format BASE...HEAD. Both must be branch names in repo. To compare with a branch that exists in a different repository in the same network as repo, the basehead parameter expects the format USERNAME:BASE...USERNAME:HEAD."),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"basehead: string;\n")))}u.isMDXComponent=!0}}]);