"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[37103],{25482:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(42664),n=(t(67308),t(62757));const l={},i=void 0,o={unversionedId:"api/airtable.airtable",id:"api/airtable.airtable",title:"airtable.airtable",description:"Home &gt; @runlightyear/airtable &gt; Airtable",source:"@site/docs/api/airtable.airtable.md",sourceDirName:"api",slug:"/api/airtable.airtable",permalink:"/docs/api/airtable.airtable",draft:!1,tags:[],version:"current",frontMatter:{}},p={},s=[{value:"Airtable class",id:"airtable-class",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 5",id:"example-5",level:2},{value:"Example 6",id:"example-6",level:2},{value:"Example 7",id:"example-7",level:2},{value:"Example 8",id:"example-8",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Base Methods",id:"base-methods",level:2},{value:"Meta Methods",id:"meta-methods",level:2},{value:"Records Methods",id:"records-methods",level:2},{value:"Other Methods",id:"other-methods",level:2}],d={toc:s},g="wrapper";function m(e){let{components:a,...t}=e;return(0,n.yg)(g,(0,r.A)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/airtable"},"@runlightyear/airtable")," ",">"," ",(0,n.yg)("a",{parentName:"p",href:"/docs/api/airtable.airtable"},"Airtable")),(0,n.yg)("h2",{id:"airtable-class"},"Airtable class"),(0,n.yg)("p",null,"Connector to the Airtable API"),(0,n.yg)("b",null,"Signature:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},"declare class Airtable extends RestConnector \n")),(0,n.yg)("p",null,"Extends: "),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"/docs/api/lightyear.restconnector"},"RestConnector")),(0,n.yg)("h2",{id:"example-1"},"Example 1"),(0,n.yg)("p",null,"Import"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { Airtable } from "@runlightyear/airtable"\n')),(0,n.yg)("h2",{id:"example-2"},"Example 2"),(0,n.yg)("p",null,"Use in an action"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'defineAction({\n  name: "airtableExample",\n  title: "Airtable Example"\n  apps: ["airtable"],\n  run: async ({ auths }) => {\n    const airtable = new Airtable({ auth: auths.airtable });\n  }\n}\n')),(0,n.yg)("h2",{id:"example-3"},"Example 3"),(0,n.yg)("p",null,"Create a single record"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "createSingleRecord",\n  title: "Create Single Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "name"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n    const response = await airtable.createRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      fields: {\n        Name: variables.name!,\n      },\n    });\n\n    console.log("Record: ", response.data);\n  },\n});\n')),(0,n.yg)("h2",{id:"example-4"},"Example 4"),(0,n.yg)("p",null,"Create multiple records"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "createMultipleRecords",\n  title: "Create Multiple Records",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.createRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      records: [\n        {\n          fields: {\n            Name: "Union Square",\n          },\n        },\n        {\n          fields: {\n            Name: "Ferry Building",\n          },\n        },\n      ],\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.yg)("h2",{id:"example-5"},"Example 5"),(0,n.yg)("p",null,"Get a record"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "getRecord",\n  title: "Get Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.getRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.yg)("h2",{id:"example-6"},"Example 6"),(0,n.yg)("p",null,"Update a record"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "updateRecord",\n  title: "Update Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId", "name"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.updateRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n      fields: {\n        Name: variables.name!,\n      },\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.yg)("h2",{id:"example-7"},"Example 7"),(0,n.yg)("p",null,"Delete a record"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "deleteRecord",\n  title: "Delete Record",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName", "recordId"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.deleteRecord({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordId: variables.recordId!,\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n')),(0,n.yg)("h2",{id:"example-8"},"Example 8"),(0,n.yg)("p",null,"List records"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-typescript"},'import { defineAction } from "@runlightyear/lightyear";\nimport { Airtable } from "@runlightyear/airtable";\n\ndefineAction({\n  name: "listRecords",\n  title: "List Records",\n  apps: ["airtable"],\n  variables: ["baseId", "tableIdOrName"],\n  run: async ({ auths, variables }) => {\n    const airtable = new Airtable({\n      auth: auths.airtable,\n    });\n\n    const response = await airtable.listRecords({\n      baseId: variables.baseId!,\n      tableIdOrName: variables.tableIdOrName!,\n      recordMetadata: ["commentCount"],\n    });\n\n    console.log("Response: ", response.data);\n  },\n});\n\n@example Who am I?\n')),(0,n.yg)("p",null,'typescript import { defineAction } from "',"@",'runlightyear/lightyear"; import { Airtable } from "',"@",'runlightyear/airtable";'),(0,n.yg)("p",null,"defineAction(",'{ name: "whoami", title: "Who Am I?", apps: ',"[",'"airtable"',"]",", run: async (","{ auths, variables }",") =",">"," { const airtable = new Airtable(","{ auth: auths.airtable }",");"),(0,n.yg)("p",null,"const response = await airtable.whoami();"),(0,n.yg)("p",null,'console.log("Response: ", response.data); }',", }","); ","`","`","`"),(0,n.yg)("h2",{id:"constructors"},"Constructors"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Constructor"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable._constructor_"},"(constructor)(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Constructs a new instance of the ",(0,n.yg)("code",null,"Airtable")," class")))),(0,n.yg)("h2",{id:"properties"},"Properties"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Property"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.authtype"},"authType")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"static")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/lightyear.authtype"},"AuthType")),(0,n.yg)("td",{parentName:"tr",align:null})),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.oauth"},"OAuth")),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"static")),(0,n.yg)("td",{parentName:"tr",align:null},"typeof ",(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtableoauth"},"AirtableOAuth")),(0,n.yg)("td",{parentName:"tr",align:null})))),(0,n.yg)("h2",{id:"base-methods"},"Base Methods"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Method"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.getbaseschema"},"getBaseSchema(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Get base schema")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.listbases"},"listBases(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"List bases")))),(0,n.yg)("h2",{id:"meta-methods"},"Meta Methods"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Method"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.whoami"},"whoami()")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Retrieve the user ID and, for OAuth access tokens, the scopes associated with the token used.")))),(0,n.yg)("h2",{id:"records-methods"},"Records Methods"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Method"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.createrecords"},"createRecords(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Creates multiple records.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.deleterecord"},"deleteRecord(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Delete record")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.getrecord"},"getRecord(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Get record")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.listrecords"},"listRecords(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"List records in a table.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.updaterecord"},"updateRecord(props)")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null},"Update record")))),(0,n.yg)("h2",{id:"other-methods"},"Other Methods"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Method"),(0,n.yg)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"/docs/api/airtable.airtable.getbaseurl"},"getBaseUrl()")),(0,n.yg)("td",{parentName:"tr",align:null}),(0,n.yg)("td",{parentName:"tr",align:null})))))}m.isMDXComponent=!0},62757:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>y});var r=t(67308);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=r.createContext({}),s=function(e){var a=r.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=s(e.components);return r.createElement(p.Provider,{value:a},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},c=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),g=s(t),c=n,y=g["".concat(p,".").concat(c)]||g[c]||m[c]||l;return t?r.createElement(y,i(i({ref:a},d),{},{components:t})):r.createElement(y,i({ref:a},d))}));function y(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[g]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"}}]);