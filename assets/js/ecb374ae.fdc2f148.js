"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87393],{62757:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(67308);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),y=s,d=c["".concat(l,".").concat(y)]||c[y]||g[y]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},14363:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(94790),s=(n(67308),n(62757));const a={},o=void 0,i={unversionedId:"api/github.issue",id:"api/github.issue",title:"github.issue",description:"Home &gt; @runlightyear/github &gt; Issue",source:"@site/docs/api/github.issue.md",sourceDirName:"api",slug:"/api/github.issue",permalink:"/docs/api/github.issue",draft:!1,tags:[],version:"current",frontMatter:{}},l={},u=[{value:"Issue type",id:"issue-type",level:2}],p={toc:u},c="wrapper";function g(e){let{components:t,...n}=e;return(0,s.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("p",null,(0,s.yg)("a",{parentName:"p",href:"/docs/api"},"Home")," ",">"," ",(0,s.yg)("a",{parentName:"p",href:"/docs/api/github"},"@runlightyear/github")," ",">"," ",(0,s.yg)("a",{parentName:"p",href:"/docs/api/github.issue"},"Issue")),(0,s.yg)("h2",{id:"issue-type"},"Issue type"),(0,s.yg)("p",null,"Documentation: ",(0,s.yg)("a",{parentName:"p",href:"https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads%5C#issues"},"https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads\\#issues")),(0,s.yg)("b",null,"Signature:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-typescript"},'declare type Issue = {\n    activeLockReason: "resolved" | "off-topic" | "too heated" | "spam" | null;\n    assignee?: User | null;\n    assignees: Array<User>;\n    authorAssociation: "COLLABORATOR" | "CONTRIBUTOR" | "FIRST_TIMER" | "FIRST_TIME_CONTRIBUTOR" | "MANNEQUIN" | "MEMBER" | "NONE" | "OWNER";\n    body: string | null;\n    closedAt: string | null;\n    comments: number;\n    commentsUrl: string;\n    createdAt: string;\n    draft?: boolean;\n    eventsUrl: string;\n    htmlUrl: string;\n    id: number;\n    labels?: Array<Label>;\n    labelsUrl: string;\n    locked: boolean;\n    milestone: Milestone | null;\n    nodeId: string;\n    number: number;\n    performedViaGithubApp?: object | null;\n    pullRequest?: {\n        diffUrl: string;\n        htmlUrl: string;\n        mergedAt: string | null;\n        patchUrl: string;\n        url: string;\n    };\n    reactions: Reactions;\n    repositoryUrl: string;\n    state?: "open" | "closed";\n    stateReason?: string | null;\n    timelineUrl?: string;\n    title: string;\n    updatedAt: string;\n    url: string;\n    user: User;\n};\n')),(0,s.yg)("b",null,"References:"),(0,s.yg)("p",null,(0,s.yg)("a",{parentName:"p",href:"/docs/api/github.user"},"User"),", ",(0,s.yg)("a",{parentName:"p",href:"/docs/api/github.label"},"Label"),", ",(0,s.yg)("a",{parentName:"p",href:"/docs/api/github.milestone"},"Milestone"),", ",(0,s.yg)("a",{parentName:"p",href:"/docs/api/github.reactions"},"Reactions")))}g.isMDXComponent=!0}}]);